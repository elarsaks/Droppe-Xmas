{"version":3,"sources":["store/reducer.ts","store/store.ts","api.tsx","store/actions.tsx","components/Product.tsx","components/ShoppingList.tsx","components/WishList.tsx","components/Confirm.tsx","components/CenterMenu.tsx","App.tsx","index.tsx"],"names":["initialState","customSelection","fullPrice","error","shoppingList","status","total","loopOverLists","wishLists","loopOverItems","map","list","name","items","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","state","action","type","payload","toFixed","cheapest","reduce","prev","curr","price","setCheapest","item","productId","confirmed","setUnConfirmed","favorite","setFavorite","getWishList","shoppingLists","listName","confirmProduct","api","getProductsData","axios","method","url","headers","then","resp","data","saveProductData","setInitialState","dispatch","getWishListProducts","wishList","Promise","all","i","title","catch","err","ProductDivWrapper","styled","div","p","value","LowerHalfSection","flexGrow","Product","amount","open","sendItemToShoppingList","width","onClick","length","className","Array","e","getDiscount","LeftHalfWrapper","ShoppingList","initialList","useSelector","countSameProducts","productList","filter","confirmedProducts","forEach","push","getAllProducts","product","productsWithAmounts","index","self","indexOf","cp","mapProductsDataBackToIds","getFavoriteAverage","favorites","sum","a","c","Math","round","useDispatch","DiscountedPriceList","acc","discountedPrice","setFullPrice","totalPrice","useEffect","setTotal","WishListWrapper","activeHeader","WishList","useState","setOpen","wishListItem","ConfirmDiv","FinalPrice","Button","button","Confirm","cancel","finalPrice","setConfirmed","saveProductsToApi","CenterMenuWrapper","ButtonContainer","active","callBack","text","CenterMenu","activeButton","setActiveButton","confirmDialog","setConfirmDialog","setCustomSelection","rotate360","keyframes","LoadingDiv","ErrorDiv","App","id","style","rootElement","document","getElementById","render"],"mappings":"wpCAAMA,EAAoB,CACxBC,iBAAiB,EACjBC,UAAW,EACXC,MAAO,KACPC,aAAc,GACdC,OAAQ,UACRC,MAAO,GAIHC,EAAgB,SAACC,EAA0BC,GAA3B,OACpBD,EAAUE,KAAI,SAAAC,GACZ,MAAO,CACLC,KAAMD,EAAKC,KACXC,MAAOJ,EAAcE,EAAKE,YCThC,I,wBAAMC,EAAmBC,8BACvBC,0BAAgBC,MAIHC,EADDC,uBDSC,WAAqD,IAApCC,EAAmC,uDAA3BpB,EAAcqB,EAAa,uCACjE,OAAQA,EAAOC,MAEb,IAAK,gBACH,OAAO,2BACFF,GADL,IAEElB,UAAWmB,EAAOE,QAAQC,QAAQ,KAItC,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEhB,aAAciB,EAAOE,QACrBlB,OAAQ,SAIZ,IAAK,eACH,IAAMoB,EAAW,SAACZ,GAAD,OACfA,EAAMa,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,MAAQD,EAAKC,MAAQF,EAAOC,MAE1DE,EAAc,SAACjB,GAAD,OACjBA,EAAMH,KAAI,SAAAqB,GAIT,OAHAA,EAAKC,YAAcP,EAASZ,GAAOmB,UAC/BD,EAAKE,WAAY,EACjBF,EAAKE,WAAY,EACdF,MAGX,OAAO,2BACFX,GADL,IAEEnB,iBAAiB,EACjBG,aAAcG,EAAca,EAAMhB,aAAc0B,KAIpD,IAAK,sBACH,OAAO,2BACFV,GADL,IAEEnB,gBAAiBoB,EAAOE,UAI5B,IAAK,YACH,IAAMW,EAAiB,SAACrB,GAAD,OACrBA,EAAMH,KAAI,SAAAqB,GAER,OADAA,EAAKE,WAAY,EACVF,MAGX,OAAO,2BACFX,GADL,IAEEnB,iBAAiB,EACjBG,aAAcG,EAAca,EAAMhB,aAAc8B,KAIpD,IAAK,YACH,OAAO,2BACFd,GADL,IAEEjB,MAAOkB,EAAOE,UAIlB,IAAK,eACH,IAAMY,EAAW,SAACtB,GAAD,OACfA,EAAMa,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAKQ,SAAWP,EAAKO,SAAWR,EAAOC,MAEhEQ,EAAc,SAACvB,GAAD,OAClBA,EAAMH,KAAI,SAAAqB,GAIR,OAHAA,EAAKC,YAAcG,EAAStB,GAAOmB,UAC/BD,EAAKE,WAAY,EACjBF,EAAKE,WAAY,EACdF,MAEX,OAAO,2BACFX,GADL,IAEEnB,iBAAiB,EACjBG,aAAcG,EAAca,EAAMhB,aAAcgC,KAIpD,IAAK,oBACH,IAAMC,EAAc,SAACC,GAAD,OAClBA,EAAc5B,KAAI,SAAAC,GAIhB,OAHIA,EAAKC,OAASS,EAAOE,QAAQgB,UAC/BC,EAAe7B,EAAKE,OAEfF,MAIL6B,EAAiB,SAAC3B,GAAD,OACrBA,EAAMH,KAAI,SAAAqB,GAIR,OAHIA,EAAKC,YAAcX,EAAOE,QAAQS,YACpCD,EAAKE,WAAaF,EAAKE,WAElBF,MAGX,OAAO,2BACFX,GADL,IAEEnB,iBAAiB,EACjBG,aAAciC,EAAYjB,EAAMhB,gBAIpC,IAAK,YACH,OAAO,2BACFgB,GADL,IAEEd,MAAOe,EAAOE,QAAQC,QAAQ,KAKlC,QACE,OAAOJ,KC9H0BN,G,qDCsBxB2B,EALH,CACVC,gBAzBsB,SAACV,GACvB,OAAOW,IAAM,CACXC,OAAQ,MACRC,IAAI,qCAAD,OAAuCb,GAC1Cc,QAAS,CACP,8BAA+B,OAIhCC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,SAiBrBC,gBAdsB,SAAClB,GACvB,OAAOW,IAAM,CACXC,OAAQ,MACRC,IAAI,qCAAD,OAAuCb,GAC1Cc,QAAS,CACP,8BAA+B,OAGhCC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,U,QC6BVE,EAAkB,kBAAM,SAACC,GACpCA,EA5B4C,CAC5C9B,KAAM,aACNC,QA0BmB,YAGnB,IAUM8B,EAAsB,SAACC,GAAD,OAC1BC,QAAQC,IAAIF,EAASzC,MAAMH,KAAI,SAAC+C,GAAD,OAXR1B,EAYL0B,EAXlBhB,EAAIC,gBAAgBX,EAAKC,WACtBe,MAAK,SAAAE,GAGJ,OAFAlB,EAAKF,MAAQoB,EAAKpB,MAClBE,EAAK2B,MAAQT,EAAKS,MACX3B,KAER4B,OAAM,SAAAC,GAAG,OAAIR,EArD4B,CAC9C9B,KAAM,YACNC,QAmDoCqC,OAPZ,IAAC7B,OAkBvBwB,QAAQC,IAAIhD,EAAUE,KAAI,SAAC4C,GACzB,OAAOD,EAAoBC,GACxBP,MAAK,SAACE,GAEL,OADAK,EAASzC,MAAQoC,EACVK,SAMZP,MAAK,SAAAE,GAAI,OAAIG,EAhF4C,CAC5D9B,KAAM,mBACNC,QA8EyC0B,S,eC1ErCY,EAAoBC,IAAOC,IAAV,41BACX,SAACC,GAAD,OAAQA,EAAE/D,gBAAmB,UAAY,UAGvC,SAAC+D,GAAD,OAAOA,EAAEC,MAAQ,GAAK,QAAU,UAkBtB,SAACD,GAAD,OAAOA,EAAE/B,UAAY,UAAY,aAMjC,SAAC+B,GAAD,OAAOA,EAAE/D,gBAAkB,UAAY,MAkBnD,SAAC+D,GAAD,OAAOA,EAAE/B,UAAY,OAAS,aAOpCiC,EAAmBJ,IAAOC,IAAV,uGAGP,SAACC,GAAD,OAAOA,EAAEG,YAiFTC,EAlEyB,SAAC,GASlC,IARLC,EAQI,EARJA,OACApC,EAOI,EAPJA,UACAE,EAMI,EANJA,SACAmC,EAKI,EALJA,KACAzC,EAII,EAJJA,MACA0C,EAGI,EAHJA,uBACAb,EAEI,EAFJA,MACAc,EACI,EADJA,MAYA,OACE,cAACX,EAAD,CACEQ,OAAQA,EACRpC,UAAWA,EACXhC,kBAA8C,OAA3BsE,IAA8C,SAAVC,EACvDC,QAASF,EACTN,MAAOP,EAAMgB,OALf,SAOE,sBAAKC,UAAWL,EAAO,OAAS,SAAhC,UACE,qBAAKK,UAAU,QAAf,SACGjB,IAEH,sBAAKiB,UAAU,aAAf,UACE,eAACT,EAAD,CAAkBC,SAAU,EAA5B,uBACa,YAAIS,MAAMzC,IAAWzB,KAAI,SAACmE,EAAGpB,GAAJ,OACpC,sBAAMkB,UAAU,WAAhB,oBAAgClB,SAGtB,IAAXY,EAEG,eAACH,EAAD,CAAkBC,SAAU,EAA5B,UACA,eAACD,EAAD,CAAkBC,SAAU,EAA5B,oBACS,8BAAItC,EAAJ,eAGT,cAACqC,EAAD,CAAkBC,SAAU,EAAGQ,UAAU,oBAAzC,SACI1C,EAA8B,YAAlB,qBAKhB,oCACA,eAACiC,EAAD,CAAkBC,SAAU,EAA5B,oBACS,8BAAItC,EAAJ,aADT,WAEU,8BAAIwC,EAAJ,OAFV,aAGY,8BAAe,IAAXA,GAAmBA,EAAS,EAAb,EAA8B,GAATA,EAAxC,QAHZ,UAIS,8BA7CD,SAACxC,EAAewC,GAClC,OAAIA,EAAS,GAAKA,EAAS,EAClBxC,EAAQwC,EAAUxC,EAAQwC,EAAS,GACjCA,EAAS,EACXxC,EAAQwC,EAAkB,EAARxC,EAAY,GAE9BA,EAAQwC,EAuCMS,CAAYjD,EAAOwC,GAAQ7C,QAAQ,GAAvC,2BC9HjBuD,EAAkBjB,IAAOC,IAAV,0MACV,SAACC,GAAD,OAAOA,EAAEQ,SAePQ,EAA4C,SAAC,GAAe,IAAbR,EAAY,EAAZA,MAEpDS,EAA6BC,aACjC,SAAC9D,GAAD,OAAgBA,EAAMhB,gBASlB+E,EAAoB,SAACC,EAAwBpD,GAAzB,OACxBoD,EAAYC,QAAO,SAACrB,GAAD,OAAOA,EAAEhC,YAAcA,KAAW0C,QAQjDtE,EAAe,WACnB,IACMkF,EAjBe,SAAC9E,GACtB,IAAI4E,EAAyB,GAE7B,OADA5E,EAAU+E,SAAQ,SAAC9B,GAAD,OAAoB2B,EAAYI,KAAZ,MAAAJ,EAAW,YAAS3B,EAAE5C,WACrDuE,EAaaK,CAAeR,GACGI,QAAO,SAAAK,GAAO,OAAIA,EAAQzD,aAK1D0D,EAJiBL,EAAkB5E,KAAI,SAAAqB,GAAI,OAAIA,EAAKC,aACvDqD,QAAO,SAACpB,EAAe2B,EAAeC,GAA/B,OAAkDA,EAAKC,QAAQ7B,KAAW2B,KAGzClF,KAAI,SAAAsD,GAC7C,MAAO,CACLhC,UAAWgC,EACXK,OAAQc,EAAkBG,EAAmBtB,OAIjD,OApB+B,SAACsB,EAA8BK,GAC9D,OAAOA,EAAoBjF,KAAI,SAACsD,GAAD,OAC7BsB,EAAkBD,QAAO,SAACU,GAAD,OAAiBA,EAAG/D,YAAcgC,EAAEhC,gBAkBxDgE,CAAyBV,EAAmBK,IA8B/CM,EAAqB,SAACb,GAC1B,IAAMc,EAAYd,EAAY1E,KAAI,SAAAsD,GAAC,OAAIA,EAAE7B,YACnCgE,EAAMD,EAAUxE,QAAO,SAAC0E,EAAGC,GAAJ,OAAUD,EAAIC,KAC3C,OAAOC,KAAKC,MAAMJ,EAAMD,EAAUxB,SAG9BU,EAAchF,IACdgD,EAAgBoD,cAChBlG,EAxBa,WACjB,IAAM8E,EAAchF,IACdqG,EAAsBrB,EAAY1E,KAAI,SAACC,GAAD,OAbfkB,EAa0DlB,EAAK,GAAGkB,OAbnDwC,EAa0D1D,EAAK+D,QAZ9F,GAAKL,EAAS,EAClBxC,EAAQwC,EAAUxC,EAAQwC,EAAS,GACjCA,EAAS,EACXxC,EAAQwC,EAAkB,EAARxC,EAAY,GAE9BA,EAAQwC,EANW,IAACxC,EAAewC,KAgBtCnE,EADYkF,EAAY1E,KAAI,SAACC,GAAD,OAAqBA,EAAK,GAAGkB,MAAQlB,EAAK+D,UAChDhD,QAAO,SAACgF,EAAa9E,GAAd,OAA+B8E,EAAM9E,KAClE+E,EAAkBF,EAAoB/E,QAAO,SAACgF,EAAa9E,GAAd,OAA+B8E,EAAM9E,KAIxF,OAFAwB,EFrEwB,SAAClD,GAAD,MAAwB,CAClDoB,KAAM,gBACNC,QAASrB,GEmEE0G,CAAa1G,IAEgB,IAA/BuG,EAAoB/B,OACvB,EACAiC,EAYQE,GAMd,OAJAC,qBAAU,WACR1D,EFxDoB,SAAC9C,GAAD,MAAoB,CAC1CgB,KAAM,YACNC,QAASjB,GEsDEyG,CAASzG,MACjB,CAAC8C,EAAUgC,EAAa9E,IAGzB,eAACyE,EAAD,CAAiBP,MAAOA,EAAxB,UACE,+CACCY,EAAY1E,KAAI,SAACgF,EAAoBjC,GAArB,OACf,cAAC,EAAD,CAEEY,OAAQqB,EAAQhB,OAChBzC,UAAWyD,EAAQ,GAAGzD,UACtBqC,MAAM,EACNzC,MAAO6D,EAAQ,GAAG7D,MAClB6B,MAAOgC,EAAQ,GAAGhC,MAClBvB,SAAU8D,EAAmBP,GAC7BnB,uBAAwB,KACxBC,MAAO,OARFf,UCnGTuD,EAAkBlD,IAAOC,IAAV,keACV,SAACC,GAAD,OAAOA,EAAEQ,SAQI,SAAAR,GAAC,OAAIA,EAAEiD,aAAe,UAAY,UAC5C,SAAAjD,GAAC,MAAgB,SAAZA,EAAEQ,MAAmB,UAAY,MAS1B,SAAAR,GAAC,MAAgB,SAAZA,EAAEQ,MAAmB,UAAY,MAmEjD0C,EAxD2B,SAAC,GAIpC,IAHLD,EAGI,EAHJA,aACAzC,EAEI,EAFJA,MACAlB,EACI,EADJA,SAEMF,EAAgBoD,cACtB,EAAwBW,oBAAkB,GAA1C,mBAAO7C,EAAP,KAAa8C,EAAb,KAkBA,OAbAN,qBAAU,YACa,IAAjBG,GACFG,EAAQH,KAET,CAACA,IAGJH,qBAAU,WACM,QAAVtC,GACF4C,GAAQ,KAET,CAAC5C,IAGF,eAACwC,EAAD,CAEEC,aAAcA,EACdzC,MAAOA,EAHT,UAKE,qBACEG,UAAU,kBACVF,QAAS,iBAAgB,SAAVD,EAAmB4C,GAAS9C,GAAQ,MAFrD,SAIGhB,EAAS1C,OAGV0C,EAASzC,MAAMH,KAAI,SAAC2G,GAAD,OACnB,cAAC,EAAD,CACEhD,OAAQ,EACRpC,UAAWoF,EAAapF,UACxBE,SAAUkF,EAAalF,SAEvBmC,KAAMA,EACNC,uBAAwB,iBAAgB,QAAVC,EAC1B,MArCoBjC,EAsCGe,EAAS1C,KAtCMoB,EAsCAqF,EAAarF,UArC7DoB,EHrBmF,CACrF9B,KAAM,oBACNC,QGmB4B,CAAEgB,WAAUP,gBADT,IAACO,EAAkBP,GAuC1CH,MAAOwF,EAAaxF,MACpB6B,MAAO2D,EAAa3D,MACpBc,MAAOA,GAPF6C,EAAarF,gBAhBjBsB,EAAS1C,OC5Dd0G,EAAaxD,IAAOC,IAAV,2hCAwDVwD,EAAazD,IAAOC,IAAV,8IAQVyD,EAAS1D,IAAO2D,OAAV,qOA6GGC,EA5FyB,SAAC,GAGlC,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,WAGMxH,EAA8B8E,aAClC,SAAC9D,GAAD,OAAgBA,EAAMhB,gBAGlBF,EAAoBgF,aACxB,SAAC9D,GAAD,OAAgBA,EAAMlB,aAGxB,EAAkCiH,mBAAS,YAA3C,mBAAOlF,EAAP,KAAkB4F,EAAlB,KAgBMC,EAAoB,kBAAMvE,QAAQC,IAAIpD,EAAaM,KAAI,SAAC4C,GAAD,OAC3DC,QAAQC,IAAIF,EAASzC,MAAMH,KAAI,SAAAgF,GAAO,OAAIjD,EAAIS,gBAAgBwC,EAAQ1D,mBACrEe,MAAK,kBAAM4E,QAKd,OACE,cAACL,EAAD,UACE,sBAAK3C,UAAU,UAAf,UACiB,aAAd1C,EACG,gCACA,4CACC7B,EAAaM,KAAI,SAAC4C,GAAD,OAChB,cAAC,EAAD,CAEE2D,cA9BWpG,EA8BmByC,EAASzC,MA7BnDA,EAAMwE,QAAO,SAAAtD,GAAI,OAAuB,IAAnBA,EAAKE,cA6BgCyC,OAAS,EACvDF,MAAO,MACPlB,SAAUA,GAHLA,EAAS1C,MA7BJ,IAACC,QAqCD,iBAAdoB,EACE,gCACA,cAAC,EAAD,CAAcuC,MAAO,QACrB,eAAC+C,EAAD,2BACe,8BArBb,EAqBa,eADf,mBAEgB,+BAAKrH,EAAY0H,GAAYpG,QAAQ,GAArC,eAFhB,gBAGa,8BAAIoG,EAAJ,kBAIb,8BACA,gEAIS,aAAd3F,GAA0C,iBAAdA,EACzB,sBAAK0C,UAAU,kBAAf,UACA,cAAC,EAAD,CACEA,UAAU,aACVF,QAAS,kBAAMkD,KAFjB,oBAOA,cAAC,EAAD,CACEhD,UAAU,cACVF,QAAS,WA3DD,aAAdxC,EACF4F,EAAa,gBACU,iBAAd5F,GACT4F,EAAa,aACbC,KAEAD,EAAa,aAmDP,SAIiB,aAAd5F,EAA2B,OAAS,eAIvC,qBAAK0C,UAAU,0BChKrBoD,EAAoBjE,IAAOC,IAAV,mcA4BjBiE,EAAkBlE,IAAOC,IAAV,qXAQC,SAACC,GAAD,OAAOA,EAAEiE,OAAS,UAAY,UAkB9CT,EAAgC,SAAC,GAIhC,IAHLS,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEA,OAAO,cAACH,EAAD,CACLC,OAAQA,EACRxD,QAAS,kBAAMyD,KAFV,SAIJC,KASQC,EAAwC,SAAC,GAG/C,IAFLnI,EAEI,EAFJA,gBACAK,EACI,EADJA,MAEM8C,EAAgBoD,cACtB,EAAwCW,mBAAS,UAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KACA,EAA0CnB,oBAAS,GAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KAQA,OANA1B,qBAAU,WACJ7G,GACFqI,EAAgB,YAEjB,CAACrI,IAGF,eAAC8H,EAAD,WACE,cAAC,EAAD,CACEE,OAAyB,WAAjBI,EACRF,KAAM,gBACND,SAAU,WACRI,EAAgB,UAChBlF,ELtFwB,SAACnD,GAAD,MAA+B,CAC/DqB,KAAM,sBACNC,QAAStB,GKoFQwI,EAAmB,OAGhC,cAAC,EAAD,CACER,OAAyB,aAAjBI,EACRF,KAAM,kBACND,SAAU,WACRI,EAAgB,YAChBlF,EL3EwB,CAChC9B,KAAM,oBK6EF,cAAC,EAAD,CACE2G,OAAyB,aAAjBI,EACRF,KAAM,kBACND,SAAU,WACRI,EAAgB,YAChBlF,EL/EwB,CAChC9B,KAAM,oBKiFDiH,EACG,cAAC,EAAD,CACAZ,OAAQ,kBAAMa,GAAiB,IAC/BZ,WAAYtH,IAEZ,qBAAKqE,UAAU,YAAf,SACA,yCAAYrE,EAAZ,cAGJ,cAAC,EAAD,CACE2H,OAAyB,YAAjBI,EACRF,KAAM,eACND,SAAU,WACRI,EAAgB,WAChBE,GAAiB,MAGrB,cAAC,EAAD,CACEP,OAAyB,UAAjBI,EACRF,KAAM,aACND,SAAU,WACRI,EAAgB,SAChBlF,ELhH8B,CACtC9B,KAAM,qBM1BFoH,EAAYC,YAAH,sHASTC,EAAa9E,IAAOC,IAAV,4cAQC2E,GAaXG,EAAW/E,IAAOC,IAAV,kIAkFC+E,GA1EO,WACpB,IAAM1F,EAAgBoD,cAEhBpG,EAA8B8E,aAClC,SAAC9D,GAAD,OAAgBA,EAAMhB,gBAGlBH,EAA2BiF,aAC/B,SAAC9D,GAAD,OAAgBA,EAAMnB,mBAGlBE,EAAgB+E,aACpB,SAAC9D,GAAD,OAAgBA,EAAMjB,SAGlBE,EAAiB6E,aACrB,SAAC9D,GAAD,OAAgBA,EAAMf,UAGlBC,EAAgB4E,aACpB,SAAC9D,GAAD,OAAgBA,EAAMd,SAUxB,OAJAwG,qBAAU,WACR1D,EAASD,OACR,CAACC,IAGF,iCACE,qBAAK2F,GAAG,SAAR,SACE,kDAGU,YAAX1I,GAAkC,OAAVF,EAErB,cAACyI,EAAD,UACA,qBAAKjE,UAAU,cAIN,MAATxE,EACE,cAAC0I,EAAD,UAEA,oBAAIG,MAAO,CAAE,MAAS,WAAtB,+EAMA,sBAAKD,GAAG,oBAAR,UACA,cAAC,EAAD,CAAcvE,MAAO,QAErB,cAAC,EAAD,CAAYvE,gBAAiBA,EAAiBK,MAAOA,IAErD,sBAAKqE,UAAU,OAAf,UACE,4CACCvE,EAAaM,KAAI,SAAC4C,GAAD,OAChB,cAAC,EAAD,CAEE2D,cAvCSpG,EAuCqByC,EAASzC,MAtCrDA,EAAMwE,QAAO,SAAAtD,GAAI,OAAuB,IAAnBA,EAAKE,cAsCkCyC,OAAS,EACvDF,MAAO,OACPlB,SAAUA,GAHLA,EAAS1C,MAtCN,IAACC,eChErBoI,GAAcC,SAASC,eAAe,QAC5CC,iBACE,cAAC,IAAD,CAAUlI,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEF+H,M","file":"static/js/main.52f0c67d.chunk.js","sourcesContent":["const initialState: any = {\n  customSelection: true,\n  fullPrice: 0,\n  error: null,\n  shoppingList: [],\n  status: 'loading',\n  total: 0\n}\n\n// Utility function\nconst loopOverLists = (wishLists: ProductList[], loopOverItems: any) => \n  wishLists.map(list => {\n    return {\n      name: list.name,\n      items: loopOverItems(list.items)\n    }\n  })\n\nexport default function reducer(state = initialState, action: any) {\n  switch (action.type) {\n\n    case 'set/fullPrice': {\n      return {\n        ...state,\n        fullPrice: action.payload.toFixed(2)\n      }\n    }\n\n    case 'set/shoppingList': {\n      return {\n        ...state,\n        shoppingList: action.payload,\n        status: 'idle'\n      }\n    }\n      \n    case 'set/cheapest': {\n      const cheapest = (items: Product[]) =>\n        items.reduce((prev, curr) => prev.price < curr.price ? prev : curr)\n      \n      const setCheapest = (items: Product[]) => \n         items.map(item => {\n          item.productId === cheapest(items).productId\n            ? item.confirmed = true\n            : item.confirmed = false\n          return item\n        })\n      \n      return {\n        ...state,\n        customSelection: false,\n        shoppingList: loopOverLists(state.shoppingList, setCheapest)\n      }\n    }\n      \n    case 'set/customSelection': {\n      return {\n        ...state,\n        customSelection: action.payload,\n      }\n    }\n      \n    case 'set/empty': {\n      const setUnConfirmed = (items: Product[]) =>\n        items.map(item => {\n          item.confirmed = false\n          return item\n        })\n      \n      return {\n        ...state,\n        customSelection: false,\n        shoppingList: loopOverLists(state.shoppingList, setUnConfirmed)\n      }\n    }\n      \n    case 'set/error': {\n      return {\n        ...state,\n        error: action.payload\n      }\n    }\n      \n    case 'set/favorite': {\n      const favorite = (items: WishListItem[]) =>\n        items.reduce((prev, curr) => prev.favorite > curr.favorite ? prev : curr)\n\n      const setFavorite = (items: WishListItem[]) =>\n        items.map(item => {\n          item.productId === favorite(items).productId\n            ? item.confirmed = true\n            : item.confirmed = false\n          return item\n        }) \n      return {\n        ...state,\n        customSelection: false,\n        shoppingList: loopOverLists(state.shoppingList, setFavorite)\n      }\n    }\n      \n    case 'set/singleProduct': {\n      const getWishList = (shoppingLists: ProductList[]) => \n        shoppingLists.map(list => {\n          if (list.name === action.payload.listName) {\n            confirmProduct(list.items)\n          }\n          return list\n        })\n      \n\n      const confirmProduct = (items: Product[]) => \n        items.map(item => {\n          if (item.productId === action.payload.productId) {\n            item.confirmed = !item.confirmed\n          }\n          return item\n        })\n      \n      return {\n        ...state,\n        customSelection: true,\n        shoppingList: getWishList(state.shoppingList)\n      }\n    }\n      \n    case 'set/total': {\n      return {\n        ...state,\n        total: action.payload.toFixed(2)\n      }\n    }\n      \n      \n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducer'\n\nconst composedEnhancer = composeWithDevTools(\n  applyMiddleware(thunkMiddleware)\n)\n\nconst store = createStore(rootReducer, composedEnhancer)\nexport default store\n","import axios from 'axios'\n\nconst getProductsData = (productId: Number) => {\n  return axios({\n    method: 'GET',\n    url: `https://fakestoreapi.com/products/${productId}`,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      //  'Cache-Control': 'max-age=3600'\n    },\n  })\n    .then(resp => resp.data)\n}\n\nconst saveProductData = (productId: Number) => {\n  return axios({\n    method: 'PUT',\n    url: `https://fakestoreapi.com/products/${productId}`,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n    },\n  })\n    .then(resp => resp.data)\n}\n\n\nconst api = {\n  getProductsData,\n  saveProductData\n}\n\nexport default api","import api from '../api'\nimport wishLists from './initialState.json'\n\nexport const setShoppingList = (shoppingList: WishList[]) => ({\n  type: 'set/shoppingList',\n  payload: shoppingList\n})\n\n\nexport const setError = (error: WishList[]) => ({\n  type: 'set/error',\n  payload: error\n})\n\nexport const setFullPrice = (fullPrice: number) => ({\n  type: 'set/fullPrice',\n  payload: fullPrice\n})\n\nexport const setCustomSelection = (customSelection: boolean) => ({\n  type: 'set/customSelection',\n  payload: customSelection\n})\n\nexport const setStatus = (status: string) => ({\n  type: 'set/status',\n  payload: status\n})\n\nexport const setSingleProduct = (payload: { listName: string, productId: number }) => ({\n  type: 'set/singleProduct',\n  payload: payload\n})\n\nexport const emptyShoppingList = () => ({\n  type: 'set/empty',\n})\n\nexport const setCheapest = () => ({\n  type: 'set/cheapest',\n})\n\nexport const setFavorite = () => ({\n  type: 'set/favorite',\n})\n\nexport const setTotal = (total: number) => ({\n  type: 'set/total',\n  payload: total\n})\n\nexport const setInitialState = () => (dispatch: any) => {\n  dispatch(setStatus('loading'))\n\n  // Get Single Product data\n  const getProductsData = (item: any) =>\n    api.getProductsData(item.productId)\n      .then(data => {\n        item.price = data.price\n        item.title = data.title\n        return item\n      })\n      .catch(err => dispatch(setError(err)))\n\n  // Get Products data per WishList\n  const getWishListProducts = (wishList: WishList) =>\n    Promise.all(wishList.items.map((i: WishListItem) =>\n      getProductsData(i)\n    )\n    )\n\n  // Loop over wishlists\n  const getProductsList = () =>\n    Promise.all(wishLists.map((wishList: any) => {\n      return getWishListProducts(wishList)\n        .then((data) => {\n          wishList.items = data\n          return wishList\n        })\n    })\n    )\n\n  getProductsList()\n    .then(data => dispatch(setShoppingList(data)))\n}\n\n","import React from 'react';\nimport styled from 'styled-components'\ninterface ProductDivWrapperProps {\n  amount: number\n  confirmed: boolean\n  customSelection: boolean\n  value: number\n}\n\nconst ProductDivWrapper = styled.div<ProductDivWrapperProps>`\n  cursor: ${(p) => (p.customSelection) ? 'pointer' : 'auto'};\n  .open {\n    visibility: visible;\n    height: ${(p) => p.value > 63 ? '100px' : '75px'}; \n    transition: all .75s ease;\n    position: relative;\n    background-color:  aliceblue;\n    border: 1px solid teal;\n    margin-top: 3px;\n    border-radius: 0.3em;\n    transition: all .5s ease;\n  }\n\n  .closed {\n    visibility: hidden;\n    overflow: hidden;\n    height: 0px;\n    transition: all .55s ease;\n  }\n\n  .title {\n    background-color: ${(p) => p.confirmed ? '#51c8f7' : '#068dc2'}; \n    padding: 0.5em;\n    border-radius: 0.3em 0.3em 0 0;\n  }\n\n  .title:hover{\n    background-color: ${(p) => p.customSelection ? '#51c8f7' : ''};\n  }\n\n  .lower-half{\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5em;\n  }\n\n  .favorite{\n    color: #ff9100\n  }\n\n  .confirmation-text {\n    font-size: 1.1em;\n    font-weight: 600;\n    width: 33%;\n    text-align: center;\n    color:${(p) => p.confirmed ? 'teal' : '#a32424'}; \n  }\n`\ninterface LowerHalfSectionProps {\n  flexGrow: number\n}\n\nconst LowerHalfSection = styled.div<LowerHalfSectionProps>`\n  display: flex;\n  flex: 1;\n  flex-grow: ${(p) => p.flexGrow};\n  white-space: pre-wrap;\n`\n\ninterface ProductProps {\n  amount: number\n  confirmed: boolean\n  favorite: number\n  open: boolean\n  price: number\n  sendItemToShoppingList: any\n  title: string\n  width: string\n}\n\nconst Product: React.FC<ProductProps> = ({\n  amount,\n  confirmed,\n  favorite,\n  open,\n  price,\n  sendItemToShoppingList,\n  title,\n  width\n}) => {\n\n  const getDiscount = (price: number, amount: number) => {\n    if (amount > 1 && amount < 9) {\n      return price * amount - (price * amount / 10)\n    } else if (amount > 9) {\n      return price * amount - (price * 9 / 10)\n    } else {\n      return price * amount\n    }\n  }\n  return (\n    <ProductDivWrapper\n      amount={amount}\n      confirmed={confirmed}\n      customSelection={!(sendItemToShoppingList === null) && width === '100%'}\n      onClick={sendItemToShoppingList}\n      value={title.length}\n    >\n      <div className={open ? 'open' : 'closed'}>\n        <div className=\"title\" >\n          {title}\n        </div>\n        <div className=\"lower-half\">\n          <LowerHalfSection flexGrow={1} >\n            Favorite: {[...Array(favorite)].map((e, i) =>\n            <span className=\"favorite\" key={i}> ★</span>)}\n          </LowerHalfSection>\n\n          {amount === 0\n            /* WISH LIST*/\n            ? <LowerHalfSection flexGrow={2} >\n              <LowerHalfSection flexGrow={1}>\n                Price: <b>{price}€</b>\n              </LowerHalfSection>\n\n              <LowerHalfSection flexGrow={1} className=\"confirmation-text\">\n                {!confirmed ? 'Not Confirmed' : 'Confirmed'}\n              </LowerHalfSection>\n            </LowerHalfSection>\n\n            /* SHOPPING LIST*/\n            : <div > { }\n              <LowerHalfSection flexGrow={2}>\n                Price: <b>{price}€ </b>\n                Amount: <b>{amount} </b>\n                Discount: <b>{amount === 1 ? 0 : amount > 9 ? 0 : amount * 10}% </b>\n                Total: <b>{getDiscount(price, amount).toFixed(2)}€</b>\n              </LowerHalfSection>\n            </div>\n          }\n        </div>\n      </div>\n    </ProductDivWrapper>\n  )\n}\n\nexport default Product","import React, { useEffect } from 'react';\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Product from \"./Product\"\nimport { setTotal, setFullPrice } from \"../store/actions\"\n\ninterface LeftHalfWrapperProps {\n  width: string\n}\n\nconst LeftHalfWrapper = styled.div<LeftHalfWrapperProps>`\n  width: ${(p) => p.width};\n  padding: 0.3em;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  ::-webkit-scrollbar { \n    width: 0;\n    height: 0;\n  }\n`\n\ninterface ShoppingListProps {\n  width: string\n}\n\nexport const ShoppingList: React.FC<ShoppingListProps> = ({ width }) => {\n\n  const initialList: ProductList[] = useSelector(\n    (state: any) => state.shoppingList\n  )\n\n  const getAllProducts = (wishLists: ProductList[]) => {\n    let productList: Product[] = []\n    wishLists.forEach((i: ProductList) => productList.push(...i.items))\n    return productList\n  }\n\n  const countSameProducts = (productList: Product[], productId: number) =>\n    productList.filter((p) => p.productId === productId).length;\n\n  const mapProductsDataBackToIds = (confirmedProducts: Product[], productsWithAmounts: any) => {\n    return productsWithAmounts.map((p: any) =>\n      confirmedProducts.filter((cp: Product) => cp.productId === p.productId))\n  }\n\n  // Create shoppingList with repeating products merged into single item\n  const shoppingList = () => {\n    const productList = getAllProducts(initialList)\n    const confirmedProducts = productList.filter(product => product.confirmed)\n    const uniqueProducts = confirmedProducts.map(item => item.productId)\n      .filter((value: number, index: number, self: number[]) => self.indexOf(value) === index)\n\n    // Count repeating products\n    const productsWithAmounts = uniqueProducts.map(p => {\n      return {\n        productId: p,\n        amount: countSameProducts(confirmedProducts, p)\n      }\n    })\n\n    return mapProductsDataBackToIds(confirmedProducts, productsWithAmounts)\n  }\n\n  const getDiscountPercentage = (price: number, amount: number) => {\n    if (amount > 1 && amount < 9) {\n      return price * amount - (price * amount / 10)\n    } else if (amount > 9) {\n      return price * amount - (price * 9 / 10)\n    } else {\n      return price * amount\n    }\n  }\n\n  // Get Shopping list total price\n  const totalPrice = () => {\n    const productList = shoppingList()\n    const DiscountedPriceList = productList.map((list: Product[]) => getDiscountPercentage(list[0].price, list.length))\n\n    const priceList = productList.map((list: Product[]) => list[0].price * list.length)\n    const fullPrice = priceList.reduce((acc: number, curr: number) => acc + curr)\n    const discountedPrice = DiscountedPriceList.reduce((acc: number, curr: number) => acc + curr)\n\n    dispatch(setFullPrice(fullPrice))\n\n    return DiscountedPriceList.length === 0\n      ? 0\n      : discountedPrice\n  }\n\n  // Get average amount of stars incase there same product from different child\n  const getFavoriteAverage = (productList: Product[]) => {\n    const favorites = productList.map(p => p.favorite)\n    const sum = favorites.reduce((a, c) => a + c)\n    return Math.round(sum / favorites.length)\n  }\n\n  const productList = shoppingList()\n  const dispatch: any = useDispatch()\n  const total = totalPrice()\n\n  useEffect(() => {\n    dispatch(setTotal(total))\n  }, [dispatch, productList, total])\n\n  return (\n    <LeftHalfWrapper width={width}>\n      <h1>Shopping List</h1>\n      {productList.map((product: Product[], i: number) => (\n        <Product\n          key={i}\n          amount={product.length}\n          confirmed={product[0].confirmed}\n          open={true}\n          price={product[0].price}\n          title={product[0].title}\n          favorite={getFavoriteAverage(product)}\n          sendItemToShoppingList={null}\n          width={'99%'}\n        />\n      ))}\n\n    </LeftHalfWrapper>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport Product from './Product'\nimport { useDispatch } from \"react-redux\"\nimport { setSingleProduct } from '../store/actions'\n\ninterface WishListWrapperProps {\n  activeHeader: boolean\n  width: string\n}\n\nconst WishListWrapper = styled.div<WishListWrapperProps>`\n  width: ${(p) => p.width};\n  position: relative;\n  display: inline-block;\n  border-radius: 0.22em;\n  margin-bottom: 0.5em;\n\n  .wishlist-header{\n    // Width is 99% only in Final Confirmation Dialog\n    background-color: ${p => p.activeHeader ? '#13c4d1' : 'teal'};\n    cursor: ${p => p.width === '100%' ? 'pointer' : ''};\n    color: white;\n    border-radius: 0.2em;\n    padding: 0.5em;\n    font-size: 1.2em;\n    text-transform: uppercase;\n\n    :hover{\n     // background-color: #13c4d1;\n      background-color: ${p => p.width === '100%' ? '#13c4d1' : ''};\n    }\n  }\n`\n\ninterface WishListProps {\n  activeHeader: boolean\n  width: string\n  wishList: ProductList\n}\n\nconst WishList: React.FC<WishListProps> = ({\n  activeHeader,\n  width,\n  wishList\n}) => {\n  const dispatch: any = useDispatch()\n  const [open, setOpen] = useState<boolean>(false)\n\n  const sendItemToShoppingList = (listName: string, productId: number) =>\n    dispatch(setSingleProduct({ listName, productId }))\n\n  useEffect(() => {\n    if (activeHeader === true) {\n      setOpen(activeHeader)\n    }\n  }, [activeHeader])\n\n  // Width is 99% only in Final Confirmation Dialog\n  useEffect(() => {\n    if (width === '99%') {\n      setOpen(true)\n    }\n  }, [width])\n\n  return (\n    <WishListWrapper\n      key={wishList.name}\n      activeHeader={activeHeader}\n      width={width}\n    >\n      <div\n        className=\"wishlist-header\"\n        onClick={() => width === '100%' ? setOpen(!open) : null}\n      >\n        {wishList.name}\n      </div>\n\n      { wishList.items.map((wishListItem: any) => (\n        <Product\n          amount={0}\n          confirmed={wishListItem.confirmed}\n          favorite={wishListItem.favorite}\n          key={wishListItem.productId}\n          open={open}\n          sendItemToShoppingList={() => width === '99%'\n            ? null\n            : sendItemToShoppingList(wishList.name, wishListItem.productId)}\n          price={wishListItem.price}\n          title={wishListItem.title}\n          width={width}\n        />\n      ))}\n    </WishListWrapper>\n  )\n}\n\nexport default WishList","import React, { useState } from 'react';\nimport styled from 'styled-components'\nimport { useSelector } from \"react-redux\"\nimport { ShoppingList } from \"./ShoppingList\"\nimport WishList from './WishList'\nimport api from '../api'\n\nconst ConfirmDiv = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n\n\n  .content {\n    width: 70vw;\n    max-height: 90vh;\n    padding: 1em 0.5em 1em 1em;\n    background-color: white;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 1em;\n    overflow-y: scroll;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n    text-align: center;\n\n    ::-webkit-scrollbar { \n      width: 0;\n      height: 0;\n    }\n    \n    .confirm-actions {\n      position: relative;\n      display: flex;\n      justify-content: space-around;\n      width: 100%;\n\n      .confirm-btn {\n          background-color: teal;\n      }\n\n      .cancel-btn {\n        background-color: #a32424;\n      }\n\n      .confirm-btn:hover {\n          background-color:#13c4d1;\n      }\n\n      .cancel-btn:hover {\n        background-color: #d33434;\n      }\n    }\n  }\n`\n\nconst FinalPrice = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 1em;\n  white-space: pre-wrap;\n  margin-bottom: 1em;\n`\n\nconst Button = styled.button`\n  outline: 0;\n  font-size: 1.1em;\n  margin: 0.1em;\n  cursor: pointer;\n  color: white;\n  padding: 0.5em;\n  text-transform: uppercase;\n  border-radius: 0.3em;\n  border: none;\n  min-width: 4em;\n`\ninterface confirmProps {\n  cancel: any\n  finalPrice: number\n}\n\nconst Confirm: React.FC<confirmProps> = ({\n  cancel,\n  finalPrice\n}) => {\n\n  const shoppingList: ProductList[] = useSelector(\n    (state: any) => state.shoppingList\n  )\n\n  const fullPrice: number = useSelector(\n    (state: any) => state.fullPrice\n  )\n\n  const [confirmed, setConfirmed] = useState('wishList')\n\n  const hasSelectedItem = (items: Product[]) =>\n    items.filter(item => item.confirmed === true)\n\n  const confirm = () => {\n    if (confirmed === 'wishList') {\n      setConfirmed('shoppingList')\n    } else if (confirmed === 'shoppingList') {\n      setConfirmed('confirmed')\n      saveProductsToApi()\n    } else {\n      setConfirmed('wishList')\n    }\n  }\n\n  const saveProductsToApi = () => Promise.all(shoppingList.map((wishList: WishList) =>\n    Promise.all(wishList.items.map(product => api.saveProductData(product.productId)))))\n    .then(() => cancel())\n\n\n\n  const price = 1\n  return (\n    <ConfirmDiv>\n      <div className=\"content\">\n        {confirmed === 'wishList'\n          ? <div >\n            <h1> Wish List</h1>\n            {shoppingList.map((wishList: ProductList) => (\n              <WishList\n                key={wishList.name}\n                activeHeader={hasSelectedItem(wishList.items).length > 0}\n                width={'99%'}\n                wishList={wishList}\n              />\n            ))}\n          </div>\n\n          : confirmed === 'shoppingList'\n            ? <div >\n              <ShoppingList width={'99%'} />\n              <FinalPrice >\n                Total Price: <b>{price}€   </b>\n              Total Discount: <b>{(fullPrice - finalPrice).toFixed(2)}€   </b>\n              Final Price: <b>{finalPrice}€</b>\n              </FinalPrice>\n            </ div>\n\n            : <div>\n              <h1>Thank you for your purchase!</h1>\n            </div>\n\n        }\n        {confirmed === 'wishList' || confirmed === 'shoppingList'\n          ? <div className=\"confirm-actions\">\n            <Button\n              className=\"cancel-btn\"\n              onClick={() => cancel()}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className=\"confirm-btn\"\n              onClick={() => confirm()}\n            >\n              {confirmed === 'wishList' ? 'Next' : 'Confirm'}\n            </Button>\n          </div>\n\n          : <div className=\"confirm-actions\"></div>\n        }\n\n      </div>\n    </ConfirmDiv>\n  )\n}\n\nexport default Confirm","import styled from 'styled-components'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport {\n  emptyShoppingList,\n  setCheapest,\n  setFavorite,\n  setCustomSelection\n} from '../store/actions'\nimport Confirm from './Confirm'\n\n\nconst CenterMenuWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 10%;\n  background-color:  aliceblue;\n  height: 100%;\n  border-left: 1px solid teal;\n  border-right: 1px solid teal;\n\n  .container {\n    display: flex;\n    height: 3em;\n    text-align:center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 1em 2px 1em 2px;\n\n    h2 {\n      text-align: center;\n    }\n  }\n`\n\ninterface ButtonContainerProps {\n  active: boolean\n}\n\nconst ButtonContainer = styled.div<ButtonContainerProps>`\n  display: flex;\n  height: 3em;\n  text-align:center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 1em 2px 1em 2px;\n  cursor: pointer;\n  background-color: ${(p) => p.active ? '#13c4d1' : 'teal'}; \n  border-radius: 0.3em;\n  text-transform: uppercase;\n  color: white;\n  width: 100%auto;\n  padding: 1em;\n\n  :hover{\n    background-color: #13c4d1;\n  }\n`\n\ninterface ButtonProps {\n  active: boolean\n  callBack: any\n  text: string\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  active,\n  callBack,\n  text,\n}) => {\n  return <ButtonContainer\n    active={active}\n    onClick={() => callBack()}\n  >\n    {text}\n  </ButtonContainer>;\n}\n\ninterface CenterMenuProps {\n  customSelection: boolean\n  total: number\n}\n\nexport const CenterMenu: React.FC<CenterMenuProps> = ({\n  customSelection,\n  total\n}) => {\n  const dispatch: any = useDispatch()\n  const [activeButton, setActiveButton] = useState('custom')\n  const [confirmDialog, setConfirmDialog] = useState(false)\n\n  useEffect(() => {\n    if (customSelection) {\n      setActiveButton('custom')\n    }\n  }, [customSelection])\n\n  return (\n    <CenterMenuWrapper >\n      <Button\n        active={activeButton === 'custom'}\n        text={'custom option'}\n        callBack={() => {\n          setActiveButton('custom')\n          dispatch(setCustomSelection(true))\n        }} />\n\n      <Button\n        active={activeButton === 'cheapest'}\n        text={'cheapest option'}\n        callBack={() => {\n          setActiveButton('cheapest')\n          dispatch(setCheapest())\n        }} />\n\n      <Button\n        active={activeButton === 'favorite'}\n        text={'favorite option'}\n        callBack={() => {\n          setActiveButton('favorite')\n          dispatch(setFavorite())\n        }} />\n\n      {confirmDialog\n        ? <Confirm\n          cancel={() => setConfirmDialog(false)}\n          finalPrice={total}\n        />\n        : <div className=\"container\">\n          <h2>Total: {total}€</h2>\n        </div>}\n\n      <Button\n        active={activeButton === 'confirm'}\n        text={'Confirm List'}\n        callBack={() => {\n          setActiveButton('confirm')\n          setConfirmDialog(true)\n        }} />\n\n      <Button\n        active={activeButton === 'empty'}\n        text={'Empty List'}\n        callBack={() => {\n          setActiveButton('empty')\n          dispatch(emptyShoppingList())\n        }} />\n\n    </CenterMenuWrapper>\n  )\n}","import React, { useEffect } from 'react';\nimport \"./App.scss\"\nimport styled, { keyframes } from 'styled-components'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { CenterMenu } from \"./components/CenterMenu\"\nimport { ShoppingList } from \"./components/ShoppingList\"\nimport WishList from './components/WishList'\nimport { setInitialState } from \"./store/actions\"\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoadingDiv = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  margin-top: 30vh;\n\ttext-align: center;\n\n  .spinner {\n    animation: ${rotate360} 1s linear infinite;\n    transform: translateZ(0);\n    border-top: 3px solid #51c8f7;\n    border-right: 3px solid #51c8f7;\n    border-bottom: 3px solid #51c8f7;\n    border-left: 5px solid teal;\n    background: transparent;\n    width: 10em;\n    height: 10em;\n    border-radius: 50%;\n  }\n`\n\nconst ErrorDiv = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  margin-top: 30vh;\n\ttext-align: center;\n`\n\nconst App: React.FC = () => {\n  const dispatch: any = useDispatch()\n\n  const shoppingList: ProductList[] = useSelector(\n    (state: any) => state.shoppingList\n  )\n\n  const customSelection: boolean = useSelector(\n    (state: any) => state.customSelection\n  )\n\n  const error: string = useSelector(\n    (state: any) => state.error\n  )\n\n  const status: string = useSelector(\n    (state: any) => state.status\n  )\n\n  const total: number = useSelector(\n    (state: any) => state.total\n  )\n\n  const hasSelectedItem = (items: Product[]) =>\n    items.filter(item => item.confirmed === true)\n\n  useEffect(() => {\n    dispatch(setInitialState())\n  }, [dispatch])\n\n  return (\n    <main>\n      <div id=\"header\">\n        <h1> Droppe X-mas </h1>\n      </div>\n\n      {status === 'loading' && error === null\n        /* Loading */\n        ? <LoadingDiv>\n          <div className=\"spinner\" />\n        </LoadingDiv>\n\n        /* Error */\n        : error != null\n          ? <ErrorDiv>\n            {/* TODO: Find out why this h1 styling doesnt work in Styled component */}\n            <h1 style={{ \"color\": '#a32424' }}>\n              Oops something went wrong, please contact system administrator!\n              </h1>\n          </ErrorDiv>\n\n          /* Content */\n          : <div id=\"content-container\">\n            <ShoppingList width={'49%'} />\n\n            <CenterMenu customSelection={customSelection} total={total} />\n\n            <div className=\"half\">\n              <h1> Wish List</h1>\n              {shoppingList.map((wishList: ProductList) => (\n                <WishList\n                  key={wishList.name}\n                  activeHeader={hasSelectedItem(wishList.items).length > 0}\n                  width={'100%'}\n                  wishList={wishList}\n                />\n              ))}\n            </div>\n          </div>\n      }\n    </main>\n  )\n}\n\nexport default App","\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from './store/store'\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\")\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)"],"sourceRoot":""}